rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Rules for collections under a user's document
    match /users/{userId} {
      // `notifications` Collection (`/users/{userId}/notifications/{notificationId}`):
      // Allow `read` and `update` only if the requesting user's `uid` matches the `userId`.
      // Do not allow `create` or `delete` from the client, as this is handled by the backend functions.
      match /notifications/{notificationId} {
        allow read, update: if request.auth.uid == userId;
        allow create, delete: if false;
      }

    }

    // Rule for the 'userNotificationPreferences' collection
    match /userNotificationPreferences/{userId} {
      allow read, write: if request.auth.uid == userId;
    }

    // Rule for the 'alertRules' collection
    match /alertRules/{ruleId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rule for the 'expenses' collection
    match /expenses/{expenseId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rule for the 'income' collection
    match /income/{incomeId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
    
    // Rule for the 'budgets' collection
    match /budgets/{budgetId} {
      // Allow reading a single document or a list of documents if the user is the owner.
      // This rule requires client-side queries to include `where("userId", "==", request.auth.uid)`.
      allow read: if request.auth.uid == resource.data.userId;
    
      // Allow creating a document if the user is the owner.
      allow create: if request.auth.uid == request.resource.data.userId;
    
      // Allow updating or deleting a document if the user is the owner.
      allow update, delete: if request.auth.uid == resource.data.userId;
    }

    // Rule for the 'recurring-transactions' collection
    match /recurring-transactions/{transactionId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rule for the 'financial-goals' collection
    match /financial-goals/{goalId} {
      allow read, write: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // Rule for the 'goal-contributions' collection
    match /goal-contributions/{contributionId} {
      allow read, write: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // NEW: Rule for the 'monthlySummaries' collection (for pre-aggregated analytics data)
    match /monthlySummaries/{summaryId} {
      allow read, write: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // NEW: Rule for saved reports or report configurations
    match /savedReports/{reportId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }

    // NEW: Rule for report templates or shared report configurations
    match /reportTemplates/{templateId} {
      allow read, update, delete: if request.auth.uid == resource.data.userId;
      allow create: if request.auth.uid == request.resource.data.userId;
    }
  }
}